{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNopewGy/6jGzXzNmhjYFGI",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Reddysaikowshik/PYTHON-FOR-DATA-SCIENCE/blob/main/Assignment_02.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pEG0ZEmWVCbG",
        "outputId": "8ab01ec2-52dc-4b0b-e2e1-dd6f94d4a3f8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter a number to calculate factorial: 3\n",
            "Factorial (Recursive) of 3: 6\n",
            "Factorial (Iterative) of 3: 6\n",
            "Python's maximum recursion limit is: 1000\n"
          ]
        }
      ],
      "source": [
        "import sys\n",
        "\n",
        "def factorial_recursive(n):\n",
        "    if n == 0 or n == 1:\n",
        "        return 1\n",
        "    else:\n",
        "        return n * factorial_recursive(n - 1)\n",
        "\n",
        "def factorial_iterative(n):\n",
        "    result = 1\n",
        "    for i in range(1, n + 1):\n",
        "        result *= i\n",
        "    return result\n",
        "\n",
        "n = int(input(\"Enter a number to calculate factorial: \"))\n",
        "\n",
        "if n > 998:\n",
        "    print(\"Warning: n > 998 might cause recursion depth issues.\")\n",
        "\n",
        "try:\n",
        "    result_recursive = factorial_recursive(n)\n",
        "    print(f\"Factorial (Recursive) of {n}: {result_recursive}\")\n",
        "except RecursionError:\n",
        "    print(\"Error: Maximum recursion depth exceeded.\")\n",
        "\n",
        "result_iterative = factorial_iterative(n)\n",
        "print(f\"Factorial (Iterative) of {n}: {result_iterative}\")\n",
        "\n",
        "print(f\"Python's maximum recursion limit is: {sys.getrecursionlimit()}\")\n"
      ]
    }
  ]
}
